<?php
/**
 * This file contains definition of FactController class
 * 
 * PHP Version: 8+
 * 
 * @category Controller
 * 
 * @package App\Controller
 * 
 * @author Kiril Savchev <k.savchev@gmail.com>
 * 
 * @license https://opensource.org/licenses/BSD-3-Clause BSD-3
 * 
 * @link https://github.com/img-academy-bg IMG Academy
 */
namespace App\Controller;

use App\Repository\FactRepository;
use App\View\View;

/**
 * FactController
 *
 * @category Controller
 * 
 * @package App\Controller
 * 
 * @author Kiril Savchev <k.savchev@gmail.com>
 * 
 * @license https://opensource.org/licenses/BSD-3-Clause BSD-3
 * 
 * @link https://github.com/img-academy-bg IMG Academy
 */
class FactController
{
    
    /**
     * The Fact repository object
     * 
     * @var FactRepository
     */
    protected FactRepository $repository;
    
    /**
     * The view component
     * 
     * @var View
     */
    protected View $view;

    /**
     * Creates new FactController object
     * 
     * @param FactRepository $repository The fact repository object
     * @param View           $view       The view component
     */
    public function __construct(FactRepository $repository, View $view)
    {
        $this->repository = $repository;
        $this->view = $view;
    }

    /**
     * Renders list with facts
     * 
     * Loads the list from the repository and pass it to the view component
     * for rendering
     * 
     * @param int    $amount Amount of items in the list
     * @param string $type   The fact type
     * 
     * @return string The rendered list (HTML)
     */
    public function list(int $amount, string $type): string
    {
        $list = $this->repository->getRandomList($amount, $type);
        return $this->view->render('fact/list', ['list' => $list]);
    }
    
    /**
     * Loads and renders a single fact
     * 
     * Loads the fact from the repository and pass it to the view component
     * for rendering
     * 
     * @param string $id The fact identifier
     * 
     * @return string The rendered fact (HTML)
     */
    public function single(string $id): string
    {
        $fact = $this->repository->getFact($id);
        return $this->view->render('fact/single', ['fact' => $fact]);
    }
}
